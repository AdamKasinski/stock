import matplotlib.pyplot as plt
import networkx as nx
import pandas as pd
import analyze
import loader
import datetime
import scipy.stats as sts
def mst(G):
    return nx.algorithms.tree.mst.minimum_spanning_tree(G)

def entropy():
    x = []
    y = []
    data = loader.loadCountAndClean("gpw_2007_list.txt", 30)
    networks = analyze.createNetworksSeries(data, start_date=datetime.date(year=2007, month=12, day=1), end_date=datetime.date(year=2009, month=1, day=1))
    dates = pd.DatetimeIndex(networks.index)
    distance = analyze.calculateDistances(data)
    for i in dates:
        G = nx.Graph()
        apex = []
        x.append(i)
        for n in distance.index:
            for j in distance.index:
                if n != j:
                    G.add_edge(n,j,weight = distance[n][j])
        network2 = mst(G)
        for l in nx.degree(network2):
            apex.append(l[1])
        entrop = sts.entropy(apex)
        y.append(entrop)
    print(y)
    plt.plot(x,y)
    plt.xlabel("Time")
    plt.ylabel("Value")
    plt.title("Entropy")
    plt.show()
